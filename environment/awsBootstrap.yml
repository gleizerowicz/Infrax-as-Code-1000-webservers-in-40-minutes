AWSTemplateFormatVersion: '2010-09-09'
Description: environment prerequisites for app - deploy once in us-east-1

Resources:
  AutomationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
        - Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - !Ref 'AutomationManagedPolicy'

  AutomationManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: IAM permissions for automated deployment
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: 
          - iam:AddRoleToInstanceProfile
          - iam:AttachRolePolicy
          - iam:CreateInstanceProfile
          - iam:CreatePolicy
          - iam:CreateRole
          - iam:DeleteInstanceProfile
          - iam:DeletePolicy
          - iam:DeleteRole
          - iam:DetachRolePolicy
          - iam:GetInstanceProfile
          - iam:GetPolicy
          - iam:GetRole
          - iam:ListInstanceProfiles
          - iam:ListInstanceProfilesForRole
          - iam:ListPolicies
          - iam:ListPolicyVersions
          - iam:ListRolePolicies
          - iam:ListRoles
          - iam:PassRole
          - iam:RemoveRoleFromInstanceProfile
          - iam:UpdateAssumeRolePolicy
          Resource: '*'
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          Resource: '*'
        - Effect: Allow
          Action:
          - s3:PutObject
          Resource:
          - 'arn:aws:s3:::codepipeline*'
          - 'arn:aws:s3:::elasticbeanstalk*'
        - Effect: Allow
          Action:
          - codecommit:CancelUploadArchive
          - codecommit:GetBranch
          - codecommit:GetCommit
          - codecommit:GetUploadArchiveStatus
          - codecommit:UploadArchive
          Resource: '*'
        - Effect: Allow
          Action:
          - codedeploy:CreateDeployment
          - codedeploy:GetApplicationRevision
          - codedeploy:GetDeployment
          - codedeploy:GetDeploymentConfig
          - codedeploy:RegisterApplicationRevision
          Resource: '*'
        - Effect: Allow
          Action:
          - elasticbeanstalk:*
          - ec2:*
          - elasticloadbalancing:*
          - autoscaling:*
          - cloudwatch:*
          - s3:*
          - sns:*
          - cloudformation:*
          - rds:*
          - route53:*
          - sqs:*
          - ecs:*
          Resource: '*'
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          - lambda:ListFunctions
          Resource: '*'
        - Effect: Allow
          Action:
          - opsworks:CreateDeployment
          - opsworks:DescribeApps
          - opsworks:DescribeCommands
          - opsworks:DescribeDeployments
          - opsworks:DescribeInstances
          - opsworks:DescribeStacks
          - opsworks:UpdateApp
          - opsworks:UpdateStack
          Resource: '*'
        - Effect: Allow
          Action:
          - cloudformation:CreateStack
          - cloudformation:DeleteStack
          - cloudformation:DescribeStacks
          - cloudformation:UpdateStack
          - cloudformation:CreateChangeSet
          - cloudformation:DeleteChangeSet
          - cloudformation:DescribeChangeSet
          - cloudformation:ExecuteChangeSet
          - cloudformation:SetStackPolicy
          - cloudformation:ValidateTemplate
          - iam:PassRole
          Resource: '*'
        - Effect: Allow
          Action:
          - codebuild:BatchGetBuilds
          - codebuild:StartBuild
          Resource: '*'

  DynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: scope
        AttributeType: S
      KeySchema:
      - AttributeName: scope
        KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: app

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      Tags:
      - Key: Name
        Value: app

  S3BucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: 
        Ref: S3Bucket
      PolicyDocument:
        Id: DemoAppBucketPolicy
        Version: '2012-10-17'
        Statement:
        - Action: 
          - s3:GetObject
          Effect: Allow
          Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
          Principal: '*'

Outputs:
  S3BucketName:
    Description: bucket name
    Value: !Ref S3Bucket
    
  DynamoDbTableName:
    Description: dynamodb table name
    Value: !Ref DynamoDbTable